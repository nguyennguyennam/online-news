<main
  class="flex h-fit min-h-screen flex-col items-center justify-center gap-12 p-6"
>
  <h1 class="text-center text-3xl font-bold">Create an Account</h1>
  <form
    action="/register"
    method="POST"
    class="flex w-full flex-col gap-8 rounded-md md:w-2/3 lg:w-1/2 xl:w-1/3"
  >
    <!-- Full Name -->
    <div class="flex w-full flex-col">
      <label for="fullName" class="text-sm font-semibold">Full Name</label>
      <input
        type="text"
        id="fullName"
        name="fullName"
        required
        class="h-12 w-full rounded-sm border-2 border-zinc-500 px-4 py-2 outline-none duration-200 focus:border-black"
      />
    </div>
    <!-- Date of Birth -->
    <div class="flex w-full flex-col">
      <label for="dob" class="text-sm font-semibold">Date of Birth</label>
      <input
        type="date"
        id="dob"
        name="dob"
        required
        class="h-12 w-full rounded-sm border-2 border-zinc-500 px-4 py-2 outline-none duration-200 focus:border-black"
      />
    </div>
    <!-- Email -->
    <div class="flex w-full flex-col">
      <label for="email" class="text-sm font-semibold">Email</label>
      <input
        type="email"
        id="email"
        name="email"
        required
        class="h-12 w-full rounded-sm border-2 border-zinc-500 px-4 py-2 outline-none duration-200 focus:border-black"
      />
    </div>
    <!-- Password -->
    <div class="flex w-full flex-col">
      <label for="password" class="text-sm font-semibold">Password</label>
      <input
        type="password"
        id="password"
        name="password"
        required
        class="h-12 w-full rounded-sm border-2 border-zinc-500 px-4 py-2 outline-none duration-200 focus:border-black"
      />
    </div>
    <!-- Confirm Password -->
    <div class="flex w-full flex-col">
      <label for="confirmPassword" class="text-sm font-semibold"
        >Confirm Password</label
      >
      <input
        type="password"
        id="confirmPassword"
        name="confirmPassword"
        required
        class="h-12 w-full rounded-sm border-2 border-zinc-500 px-4 py-2 outline-none duration-200 focus:border-black"
      />
    </div>

    <!-- Submit Button -->
    <button
      type="submit"
      class="flex h-12 items-center justify-center border-2 border-black bg-black font-bold uppercase tracking-tight text-white duration-200 hover:bg-white hover:text-black"
    >
      Register
    </button>
    <p class="self-end">
      I already have an account.&nbsp;<a
        href="/login"
        class="text-zinc-500 underline"
        >Login</a
      >.
    </p>
  </form>
  <div
    class="-mt-4 flex w-full flex-col items-center gap-6 md:w-2/3 lg:w-1/2 xl:w-1/3"
  ></div>
</main>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.querySelector("form");
    const emailInput = document.querySelector("#email");
    let canSubmit = true; // Biến kiểm soát submit

    emailInput.addEventListener("blur", async function () {
      const email = emailInput.value.trim();
      try {
        const response = await fetch("/check-email", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ email }),
        });

        const data = await response.json();
        const existingError = document.querySelector("#email-error");

        if (data.exists) {
          canSubmit = false; // Không cho phép submit
          if (!existingError) {
            const errorMessage = document.createElement("p");
            errorMessage.id = "email-error";
            errorMessage.textContent = "Email has been used.";
            errorMessage.classList.add("text-red-500", "text-sm", "mt-1");
            emailInput.parentElement.appendChild(errorMessage);
          }
          emailInput.classList.add("border-red-500");
        } else {
          canSubmit = true; // Cho phép submit
          if (existingError) {
            existingError.remove(); // Xóa thông báo lỗi nếu tồn tại
          }
          emailInput.classList.remove("border-red-500");
        }
      } catch (error) {
        console.error("Error checking email:", error);
        canSubmit = false; 
      }
    });

    // Xử lý submit form
    form.addEventListener("submit", function () {
      const confirmPassword = document
        .querySelector("#confirmPassword")
        .value.trim();
      const pass = document.querySelector("#password").value.trim();
      if (
        !canSubmit ||
        pass !== confirmPassword) {
        event.preventDefault();
        alert("Error: Passwords do not match or existing email.Please try again");
        return;
      }
    });
  });
</script>
