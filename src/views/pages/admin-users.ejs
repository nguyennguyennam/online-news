<div class="mx-auto flex w-full max-w-screen-lg flex-col gap-4">
  <h1 class="text-2xl font-semibold">Manage Users</h1>

  <%- include('../components/error-dialog.ejs') %> <%-
  include('../components/processing-dialog.ejs') %>

  <!-- Scriptlet tag for handling users list and maybe pagination? -->
  <script defer>
    const users = JSON.parse(`<%- JSON.stringify(adminUsers) %>`);
  </script>

  <% adminUsers.sort((a, b)=> a.clearance - b.clearance);
    const roles = {
    1: "Subscriber",
    2: "Writer",
    3: "Editor",
    4: "Admin"
    };
    %>
    <% adminUsers.forEach(user=> { %>
      <details user-id="<%= user._id %>" class="rounded-lg border-2 border-zinc-400">
        <summary
          class="flex w-full items-center justify-between px-4 py-2 marker:m-0 marker:appearance-none marker:p-0">
          <div class="user-item border-b border-gray-300 py-4">
            <p><strong>Full Name:</strong>
              <%= user.fullName %>
            </p>
            <p><strong>Email:</strong>
              <%= user.email %>
            </p>
            <p><strong>Role:</strong>
              <%= roles[user.clearance] || "Unknown" %>
            </p>
            <% if (user.clearance===1) { %>
              <p><strong>Subscription:</strong>
                <%= user.subscription %>
              </p>
              }
              <%}%>
                <% if (user.clearance===2) { %>
                  <p><strong>Pen Name:</strong>
                    <%= user.penName %>
                  </p>
                  <%}%>
          </div>
          <div class="flex flex-row items-center gap-px">
            <a href="edit/<%= user._id %>" class="flex items-center justify-center p-2 duration-200 hover:bg-zinc-200" title="Edit">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 -960 960 960" class="size-6" aria-label="Edit">
                <path
                  d="M206.22-206.78h57.56l352.57-352.57-56.44-57-353.69 353.7v55.87Zm-52.44 106q-22.08 0-37.54-15.46t-15.46-37.54v-109.44q0-21.08 7.98-40.39 7.98-19.3 22.94-34.26l495.95-495.52q13.13-12.7 29.33-19.26 16.19-6.57 33.89-6.57 17.13 0 33.83 6.57 16.69 6.56 29.95 19.69l79.31 78.61q13.13 12.7 19.48 29.68 6.34 16.97 6.34 34.24 0 17.69-6.34 34.17-6.35 16.48-19.48 29.61L339-131.7q-14.96 14.96-34.26 22.94-19.3 7.98-40.39 7.98H153.78Zm593.78-589.65L691-747.56l56.56 57.13ZM587.91-587.91l-28-28.44 56.44 57-28.44-28.56Z" />
              </svg>
            </a>

            <div id="edit-form-user-<%= user._id %>" class="hidden">
              <input type="text" id="edit-input-user-<%= user._id %>" class="border p-2" value="<%= user.name %>" />
              <button onclick="confirmEdit('<%= user._id %>','user')" class="p-2 bg-blue-500 text-white rounded">
                Confirm
              </button>
              <button onclick="cancelEdit('<%= user._id %>','user')" class="p-2 bg-gray-300 text-black rounded">
                Cancel
              </button>
            </div>
            <% if (user.clearance===1) { %>
              <button 
              id="add-btn-user-<%= user._id %>"
                class="flex items-center justify-center p-2 duration-200 hover:bg-zinc-200 "
                onclick="showAddInputForm('<%= user._id %>')" title="Add subscription">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 -960 960 960" class="size-6" aria-label="Add">
                  <path
                    d="M427-427H233.78q-22.08 0-37.54-15.46-15.46-15.45-15.46-37.54t15.46-37.54Q211.7-533 233.78-533H427v-193.22q0-22.08 15.46-37.54 15.45-15.46 37.54-15.46t37.54 15.46Q533-748.3 533-726.22V-533h193.22q22.08 0 37.54 15.46 15.46 15.45 15.46 37.54t-15.46 37.54Q748.3-427 726.22-427H533v193.22q0 22.08-15.46 37.54-15.45 15.46-37.54 15.46t-37.54-15.46Q427-211.7 427-233.78V-427Z" />
                </svg>
              </button>
              <% } %>
                <button class="flex items-center justify-center p-2 duration-200 hover:bg-zinc-200"
                  onclick="confirmDelete('<%= user._id %>')" title="Delete">
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 -960 960 960" class="size-6" aria-label="Delete">
                    <path
                      d="M273.78-100.78q-44.3 0-75.15-30.85-30.85-30.85-30.85-75.15v-507q-22.09 0-37.54-15.46-15.46-15.46-15.46-37.54 0-22.09 15.46-37.55 15.45-15.45 37.54-15.45H347q0-22.09 15.46-37.55 15.45-15.45 37.54-15.45h158.87q22.09 0 37.54 15.45 15.46 15.46 15.46 37.55h180.35q22.09 0 37.54 15.45 15.46 15.46 15.46 37.55 0 22.08-15.46 37.54-15.45 15.46-37.54 15.46v507q0 44.3-30.85 75.15-30.85 30.85-75.15 30.85H273.78Zm412.44-613H273.78v507h412.44v-507ZM396.61-280.57q19.26 0 32.74-13.47 13.48-13.48 13.48-32.74v-267.57q0-19.26-13.48-32.74t-32.74-13.48q-19.26 0-33.02 13.48-13.76 13.48-13.76 32.74v267.57q0 19.26 13.76 32.74 13.76 13.47 33.02 13.47Zm167.35 0q19.26 0 32.74-13.47 13.47-13.48 13.47-32.74v-267.57q0-19.26-13.47-32.74-13.48-13.48-32.74-13.48t-33.03 13.48q-13.76 13.48-13.76 32.74v267.57q0 19.26 13.76 32.74 13.77 13.47 33.03 13.47ZM273.78-713.78v507-507Z" />
                  </svg>
                </button>

                <div id="delete-modal" style="
              display: none !important; 
              position: fixed; 
              inset: 0; 
              background-color: rgba(0, 0, 0, 0.5); 
              z-index: 1000; 
              display: flex; 
              justify-content: center; 
              align-items: center;"
                  class="hidden fixed inset-0 flex items-center justify-center bg-black bg-opacity-50">
                  <div class="model-content">
                    <div class="bg-white p-6 rounded-lg shadow-lg text-center">
                      <p class="mb-4 text-lg font-semibold">Bạn chắc chắn muốn xóa user này chứ?</p>
                      <div class="flex justify-center gap-4">
                        <button id="cancel-btn" class="px-4 py-2 bg-gray-300 text-black rounded" onclick="closeModal()">
                          Cancel
                        </button>
                        <button id="confirm-btn" class="px-4 py-2 bg-red-500 text-white rounded">
                          Confirm
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
        </summary>

        <div id="add-form-user-<%= user._id %>" class="hidden p-4">
          <input type="text" id="add-input-user-<%= user._id %>" class="border p-2 w-full"
            placeholder="Enter new sub-useregory" />
          <div class="flex gap-2 mt-2">
            <button onclick="confirmAdd('<%= user._id %>')" class="p-2 bg-blue-500 text-white rounded">
              Confirm
            </button>
            <button onclick="cancelAdd('<%= user._id %>')" class="p-2 bg-gray-300 text-black rounded">
              Cancel
            </button>
          </div>
        </div>
      </details>
      <% }) %>
        <button id="adduseregoryBtn" class="px-4 py-2 bg-blue-500 text-white rounded shadow hover:bg-blue-600">
          Add User
        </button>

        <!-- Modal -->
        <div id="modal" class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 hidden" style="
              display: none !important; 
              position: fixed; 
              inset: 0; 
              background-color: rgba(0, 0, 0, 0.5); 
              z-index: 1000; 
              display: flex; 
              justify-content: center; 
              align-items: center;">
          <div class="bg-white w-96 rounded-lg shadow-lg p-6">
            <h2 class="text-lg font-bold mb-4">Add user</h2>

            <!-- user Name -->
            <div class="mb-4">
              <label for="userName" class="block text-sm font-medium text-gray-700">User Name</label>
              <input type="text" id="userName" placeholder="Enter User name"
                class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
            </div>

            <!-- user Email -->
            <div class="mb-4">
              <label for="userEmail" class="block text-sm font-medium text-gray-700">User Email</label>
              <input type="text" id="userEmail" placeholder="Enter User email"
                class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
            </div>

            <!-- user clearance -->
            <div class="mb-4">
              <label for="subuseregoryCount" class="block text-sm font-medium text-gray-700">Enter User
                clearance</label>
              <select id="subuseregoryCount"
                class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                <option value="0">Select</option>
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="3">4</option>
              </select>
            </div>

            <!-- Actions -->
            <div class="mt-6 flex justify-end space-x-4">
              <button id="cancelBtn" class="px-4 py-2 bg-red-500 text-white rounded shadow hover:bg-red-600">
                Cancel
              </button>
              <button id="confirmBtn" class="px-4 py-2 bg-green-500 text-white rounded shadow hover:bg-green-600">
                Confirm
              </button>
            </div>
          </div>
        </div>

        <script>
          function startEditing(entityId, entityType) {
            // Hide the text and edit button
            document.getElementById(`${entityType}-name-${entityId}`).style.display = "none";
            document.getElementById(`edit-btn-${entityType}-${entityId}`).style.display = "none";

            // Show the input form
            document.getElementById(`edit-form-${entityType}-${entityId}`).classList.remove("hidden");
          }

          function confirmEdit(entityId, entityType) {
            // Get the new value from the input field
            const newValue = document.getElementById(`edit-input-${entityType}-${entityId}`).value;

            // Update the text content
            document.getElementById(`${entityType}-name-${entityId}`).textContent = newValue;

            // Reset visibility
            document.getElementById(`${entityType}-name-${entityId}`).style.display = "inline-block";
            document.getElementById(`edit-btn-${entityType}-${entityId}`).style.display = "flex";
            document.getElementById(`edit-form-${entityType}-${entityId}`).classList.add("hidden");
          }

          function cancelEdit(entityId, entityType) {
            // Reset visibility
            document.getElementById(`${entityType}-name-${entityId}`).style.display = "inline-block";
            document.getElementById(`edit-btn-${entityType}-${entityId}`).style.display = "flex";
            document.getElementById(`edit-form-${entityType}-${entityId}`).classList.add("hidden");
          }


          //Hàm xử lí useregories
          function showAddInputForm(userId) {
            const details = document.querySelector(`details[user-id="${userId}"]`);
            const form = document.getElementById(`add-form-user-${userId}`);

            if (details && !details.open) {
              details.open = true; // Mở tag <details>
            }

            form.classList.remove('hidden'); // Hiển thị form
          }

          function confirmAdd(userId) {
            const input = document.getElementById(`add-input-user-${userId}`);
            const newValue = input.value.trim();

            if (newValue) {
              alert(`New sub-useregory "${newValue}" added for useregory ID: ${userId}`);
              // Logic gửi dữ liệu đến server ở đây (AJAX hoặc fetch API)
            } else {
              alert('Please enter a valid sub-useregory name.');
            }

            cancelAdd(userId); // Ẩn form sau khi xử lý
          }

          function cancelAdd(userId) {
            const form = document.getElementById(`add-form-user-${userId}`);
            const input = document.getElementById(`add-input-user-${userId}`);

            form.classList.add('hidden'); // Ẩn form
            input.value = ''; // Reset input
          }

          //Hàm dùng để xử lí nút delete
          function confirmDelete(userId) {
            const modal = document.getElementById('delete-modal');
            const confirmButton = document.getElementById('confirm-btn');

            // Hiển thị modal
            modal.style.display = 'flex';

            // Gắn sự kiện xóa vào nút Confirm
            confirmButton.onclick = () => {
              fetch(`./delete/${userId}`, { method: 'DELETE' })
                .then((response) => {
                  if (response.ok) {
                    louserion.reload(); // Reload trang sau khi xóa thành công
                  } else {
                    alert('Xóa thất bại!');
                  }
                })
                .catch((error) => console.error('Error:', error));
            };
          }

          function closeModal() {
            const modal = document.getElementById('delete-modal');
            modal.style.display = 'none';
          }

          //Hàm sử lí nút add useregory
          // DOM Elements
          const adduseregoryBtn = document.getElementById("adduseregoryBtn");
          const modal = document.getElementById("modal");
          const cancelBtn = document.getElementById("cancelBtn");
          const confirmBtn = document.getElementById("confirmBtn");
          const subuseregoryCount = document.getElementById("subuseregoryCount");
          const subuseregoriesContainer = document.getElementById("subuseregories");

          // Show modal
          adduseregoryBtn.addEventListener("click", () => {
            modal.style.display = 'flex';
          });

          // Hide modal
          cancelBtn.addEventListener("click", () => {
            modal.style.display = 'none';
          });

          // Update subuseregories input fields based on count
          subuseregoryCount.addEventListener("change", () => {
            const count = parseInt(subuseregoryCount.value, 10);
            subuseregoriesContainer.innerHTML = ""; // Clear existing inputs
            for (let i = 1; i <= count; i++) {
              const inputGroup = document.createElement("div");
              inputGroup.className = "mb-4";
              inputGroup.innerHTML = `
            <label for="subuseregory-${i}" class="block text-sm font-medium text-gray-700">Subuseregory ${i}</label>
            <input type="text" id="subuseregory-${i}" placeholder="Enter subuseregory ${i}" 
                   class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
          `;
              subuseregoriesContainer.appendChild(inputGroup);
            }
          });

          // Handle confirm
          confirmBtn.addEventListener("click", () => {
            const useregoryName = document.getElementById("useregoryName").value;
            const subuseregories = [];
            for (let i = 1; i <= subuseregoryCount.value; i++) {
              const subuseregory = document.getElementById(`subuseregory-${i}`).value;
              subuseregories.push(subuseregory);
            }
            console.log({ useregoryName, subuseregories });
            alert("Data saved! Check the console for output.");
            modal.classList.add("hidden"); // Hide modal
          });
          document.addEventListener("DOMContentLoaded", function () {
            const adminUsersData = document.getElementById("adminUsersData").textContent;
            const adminUsers = JSON.parse(adminUsersData);

            // Iterate through users and check expiration
            adminUsers.forEach((user) => {
              if (user.clearance === 1) {
                const userSubscription = new Date(user.subscription).getTime();
                const currentDate = Date.now();

                if (userSubscription < currentDate) {
                  const userElement = document.querySelector(`details[user-id="${user._id}"]`);
                  if (userElement) {
                    const expiredDiv = document.createElement("div");
                    expiredDiv.className =
                      "absolute -right-96 top-2 rounded-md bg-orange-300 px-4 py-2 font-semibold";
                    expiredDiv.textContent = "Expired";
                    const form = document.createElement("form");
                    form.action = `/admin/users/${user._id}`;
                    form.method = 'POST';
                    form.className = "mt-2"; // Optional styling for spacing

                    // Add hidden input for action type
                    const hiddenInput = document.createElement("input");
                    hiddenInput.type = "hidden";
                    hiddenInput.name = "userId"; // Key to identify the ID on the server-side
                    hiddenInput.value = user._id; // Store the user's ID as the value

                    form.appendChild(hiddenInput);

                    // Add the submit button
                    const button = document.createElement("button");
                    button.type = "submit";
                    button.textContent = "Extend";
                    button.className =
                      "rounded-full border border-black bg-black px-4 py-2 text-sm font-semibold text-white";
                    form.appendChild(button);

                    // Append both expired message and form to the user details section
                    const userInfoDiv = userElement.querySelector(".user-item");
                    if (userInfoDiv) {
                      userInfoDiv.style.position = "relative"; // Ensure the parent has a relative position
                      userInfoDiv.appendChild(expiredDiv);
                      userInfoDiv.appendChild(form); // Append the form right after the expired message
                    }
                  }
                }
              }
            });
          });
        </script>
